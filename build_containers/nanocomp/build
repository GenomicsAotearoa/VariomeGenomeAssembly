#!/bin/bash
set -e

# Script to auto build_containers and install nanocomp. Just provide the version

function usage() {
 cat << EOF
Usage: ${0} <VERSION>

 <VERSION> is the specific version number you're build_containersing

EOF
}

# Quit the script if it doesn't have enough flags set
if [ $# -lt 1 ]; then
 usage
 exit 1
fi

APP="nanocomp"
VERSION=$1
DATE=`date +"%d/%m/%Y %r"`
# Work out root of project checkout directory
ROOT=`pwd | awk -F'/build_containers' '{print $1}'`
# Subdirectory for container
CONTAINER="${ROOT}/containers"
echo "Building ${APP} ${VERSION} on ${DATE}"

# Create install directory
mkdir -p ${CONTAINER}/${APP}/${VERSION}/bin
# Generate Singularity def file (use micromamba option)
${ROOT}/build_containers/templates/create_singularity_conda_env.py3 -u -a ${APP} -v ${VERSION} -l ${CONTAINER}/${APP}/${VERSION}
# Build container
if [ ! -f ${CONTAINER}/${APP}/${VERSION}/${APP}_${VERSION}.sif ]; then
	unset APPTAINER_BIND
        apptainer build --fakeroot ${CONTAINER}/${APP}/${VERSION}/${APP}_${VERSION}.sif ${CONTAINER}/${APP}/${VERSION}/Singularity
else
        echo "${CONTAINER}/${APP}/${VERSION}/${APP}_${VERSION}.sif already exists, won't overwrite"
fi
# Create version specific template
sed -e "s%APPVER%${APP}_${VERSION}%g" ${ROOT}/build_containers/templates/bin_template > ${APP}_bin_template
sed -i "s%ROOT%${CONTAINER}%g" ${APP}_bin_template
sed -i "s%APPNAME%${APP}%g" ${APP}_bin_template
sed -i "s%VERSION%${VERSION}%g" ${APP}_bin_template
sed -i "s%BINDS%${ROOT}%g" ${APP}_bin_template
sed -i "s%EXEC%micromamba run -p /opt/conda/envs/${APP}_${VERSION}_singularity%g" ${APP}_bin_template

# Create scripts to run each binary in container
cat ${APP}_bin_template > ${CONTAINER}/${APP}/${VERSION}/bin/NanoComp

# Make all scripts executable
chmod a+x ${CONTAINER}/${APP}/${VERSION}/bin/*
# Remove the versioned template
rm ${APP}_bin_template
#Create module directory
mkdir -p ${ROOT}/modulefiles/${APP}
echo "Writing modulefile"
echo "#%Module 1.0
#
#  ${APP} module for use with 'environment-modules' package:
#
prepend-path  PATH              ${CONTAINER}/${APP}/${VERSION}/bin" > ${ROOT}/modulefiles/${APP}/${VERSION}
echo "Writing module .version to set default"
echo "#%Module1.0
##
##  The desired version of ${APP}
##
set ModulesVersion ${VERSION}" > ${ROOT}/modulefiles/${APP}/.version
